name: Build and publish Docker image

on:
  push:
    branches:
      - "main"
  workflow_dispatch: {}

permissions:
  contents: read
  packages: write

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # üîπ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ–≥–æ–≤ (–∫–æ—Ä–æ—Ç–∫–∏–π SHA + latest)
      - name: Prepare image tags
        id: set-tags
        run: |
          SHORT_SHA=${GITHUB_SHA::7}
          echo "SHORT_SHA=${SHORT_SHA}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${SHORT_SHA}" >> $GITHUB_ENV
          echo "TAGS=ghcr.io/${GITHUB_REPOSITORY}:${SHORT_SHA},ghcr.io/${GITHUB_REPOSITORY}:latest" >> $GITHUB_ENV
          echo "Computed tags: $TAGS"

      # üîπ –°–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è Docker –æ–±—Ä–∞–∑–∞
      - name: Build and push Docker image (sha + latest)
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # üîπ –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–µ–∫–∞ novoland –≤ Portainer
      - name: Redeploy novoland stack in Portainer
        env:
          PORTAINER_URL: ${{ secrets.PORTAINER_URL }}
          PORTAINER_TOKEN: ${{ secrets.PORTAINER_TOKEN }}
          STACK_ID: 2
          ENDPOINT_ID: 1
          IMAGE_TAG: ${{ env.IMAGE_TAG }}
        run: |
          echo "Triggering redeploy for stack novoland with image tag $IMAGE_TAG..."
          curl -k -X PUT \
            -H "x-api-key: $PORTAINER_TOKEN" \
            -H "Content-Type: application/json" \
            "$PORTAINER_URL/api/stacks/$STACK_ID/git/redeploy?endpointId=$ENDPOINT_ID" \
            -d "{\"env\": [{\"name\": \"IMAGE_TAG\", \"value\": \"$IMAGE_TAG\"}]}" \
            -w "\nHTTP_STATUS:%{http_code}\n"
