name: –°–±–æ—Ä–∫–∞, –ø—É–±–ª–∏–∫–∞—Ü–∏—è –∏ –¥–µ–ø–ª–æ–π –æ–±—Ä–∞–∑–∞ –≤ Timeweb Registry

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production

    env:
      REGISTRY: ${{ vars.REGISTRY_NAME }}              # –Ω–∞–ø—Ä–∏–º–µ—Ä: cr.timeweb.cloud
      IMAGE_NAME: ${{ vars.IMAGE_NAME }}              # –Ω–∞–ø—Ä–∏–º–µ—Ä: 5c69afee-intelligent-callisto/novoland
      TAG: ${{ github.sha }}
      TG_CHAT_ID: ${{ vars.TG_CHAT_ID }}
      TG_BOT_TOKEN: ${{ secrets.TG_BOT_TOKEN }}

    steps:
      - name: üì¶ –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –∏–∑ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        uses: actions/checkout@v4

      - name: üîë –í—Ö–æ–¥–∏–º –≤ Timeweb Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.TWC_REGISTRY_USER }}
          password: ${{ secrets.TWC_REGISTRY_TOKEN }}

      - name: üèó –°–æ–±–∏—Ä–∞–µ–º Docker-–æ–±—Ä–∞–∑
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:$TAG .

      - name: üè∑ –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–≥ latest
        run: |
          docker tag $REGISTRY/$IMAGE_NAME:$TAG $REGISTRY/$IMAGE_NAME:latest

      - name: üöÄ –ü—É–±–ª–∏–∫—É–µ–º –æ–±—Ä–∞–∑—ã –≤ —Ä–µ–µ—Å—Ç—Ä
        run: |
          docker push $REGISTRY/$IMAGE_NAME:$TAG
          docker push $REGISTRY/$IMAGE_NAME:latest

      - name: üì¢ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ Telegram
        if: success()
        run: |
          MESSAGE="‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Å–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è –æ–±—Ä–∞–∑–∞:
          \n–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: $REGISTRY
          \n–û–±—Ä–∞–∑: $IMAGE_NAME
          \n–¢–µ–≥–∏: $TAG, latest"

          curl -s -X POST "https://api.telegram.org/bot${TG_BOT_TOKEN}/sendMessage" \
            -d chat_id="${TG_CHAT_ID}" \
            -d text="$MESSAGE" \
            -d parse_mode="Markdown"
